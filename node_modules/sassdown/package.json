{
  "name": "sassdown",
  "description": "Generates a documentation styleguide from Markdown comments in sass/scss directories using Handlebars",
  "version": "0.1.4",
  "author": {
    "name": "Jesper Hills",
    "email": "jay@nopr.co",
    "url": "http://www.nopr.co"
  },
  "homepage": "https://github.com/nopr/sassdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/nopr/sassdown.git"
  },
  "bugs": {
    "url": "https://github.com/nopr/sassdown/issues"
  },
  "licenses": [
    {
      "type": "Creative Commons",
      "url": "http://creativecommons.org/licenses/by-sa/3.0/deed.en_US"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "dependencies": {
    "cssmin": "~0.4.1",
    "marked": "~0.2.10",
    "handlebars": "~1.0.12"
  },
  "readme": "# sassdown\n\n> Generates a documentation styleguide from Markdown comments in sass/scss directories using Handlebars\n\n**Note: *This plugin is still in active development!* So expect it to be a little rough around the edges. If you have any questions, issues or suggestions get in touch. Currently on version `0.1.4`.**\n\n1. [Getting started](#getting-started)\n2. [The \"sassdown\" task](#the-sassdown-task)\n    - [Overview](#overview)\n    - [Options](#options)\n    - [Usage](#usage)\n3. [Markdown](#markdown)\n4. [Handlebars](#handlebars)\n5. [Compass? Sass?](#compass-sass)\n\n## Getting started\nRequires Grunt `~0.4.1`\n\n_If you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins._\n\nInstall this plugin with this command:\n\n```bash\nnpm install sassdown --save-dev\n```\n\nEnabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('sassdown');\n```\n\n## The \"sassdown\" Task\n\nRun the task using `grunt sassdown`. Task targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide. **While in development** if you encounter any confusing issues, do try running `grunt sassdown --verbose` - this will output the full process.\n\n### Overview\nIn your project's Gruntfile, add a section named `sassdown` to the data object passed into `grunt.initConfig()`.\n\n```js\nsassdown: {\n    options: {\n        // Task-specific options go here.\n    },\n    your_target: {\n        // Target-specific file lists and/or options go here.\n    },\n},\n```\n\n### Options\n\n#### options.assets\nType: `Array`\nDefault value: `null`\n\n*Required*. Array of file paths. These will be included into result examples in the styleguide. Typically, these assets are your finished compiled stylesheets and/or javascript files.\n\n#### options.template\nType: `String`\nDefault value: `null`\n\n*Optional*. A relative path to a Handlebars file with structure for the styleguide. If unspecified reverts to a default.\n\n#### options.theme\nType: `String`\nDefault value: `null`\n\n*Optional*. A relative path to a Stylesheet file containing the visual theme of the styleguide. If unspecified reverts to a default.\n\n### Usage\n\nYou will need to use an [expanded files object](http://gruntjs.com/configuring-tasks#building-the-files-object-dynamically), but here is roughly the minimum settings and setup required.\n```js\nsassdown: {\n    options: {\n        assets: ['assets/css/*.css']\n    },\n    files: {\n        expand: true,\n        cwd: 'assets/sass',\n        src: ['*.scss'],\n        dest: 'styleguide/'\n    }\n},\n```\n\nOn larger projects you may need to include additional assets and customise the output with a user theme and template.\n```js\nsassdown: {\n    options: {\n        assets: [\n            'public/css/**/*.min.css',\n            'public/js/*.min.js',\n            'http://use.typekit.net/sea5yvm.js',\n        ],\n        theme: 'src/styleguide/theme.css',\n        template: 'src/styleguide/template.hbs'\n    },\n    files: {\n        expand: true,\n        cwd: 'src/assets/sass',\n        src: [\n            'partials/**/*.{scss,sass}',\n            'modules/**/*.{scss,sass}'\n        ],\n        dest: 'public/styleguide/'\n    }\n},\n```\n\n# Markdown\n\nSassdown uses [Markdown](https://github.com/evilstreak/markdown-js) to parse any block comments in your SASS files. From these, it generates the text content in the styleguide. Any recognised code blocks will be rendered as HTML source-result pairs.\n\n### Example (_alerts.scss)\n\nHere is an example of what a .scss file may look like with a Markdown comment block. Notice the indented HTML example. You may use any Markdown-compatible [heading syntax](https://github.com/nopr/sassdown/issues/7) you like. You may use any common style of [block-comment syntax](https://github.com/nopr/sassdown/issues/12#issuecomment-28219982) you like. Code blocks may be fenced or indented (four spaces).\n\n```scss\n/*\n\nAlerts\n======\n\nCreates an alert box notification using the `.alert-` prefix. The following options are available:\n\n    <div class=\"alert-success\">Success</div> \n    <div class=\"alert-warning\">Warning</div> \n    <div class=\"alert-error\">Error</div>\n\n*/\n@mixin alert($colour){\n    color: darken($colour, 50%);\n    background: $colour;\n    border-radius: 5px;\n    margin-bottom: 1em;\n    padding: 1em;\n}\n.alert-success { @include alert(#e2f3c1) }\n.alert-warning { @include alert(#fceabe) }\n.alert-error   { @include alert(#ffdcdc) }\n```\n\n# File Object\n\nSassdown parses through your files using Grunt and before compiling any Handlebars templates it generates a series of File objects. This object contains all data for the `.html` page that gets rendered.\n\nProperties inside the File object can be accessed by the Handlebars template using `{{ helpers }}`. For example, the `heading` property is used in the default template like `<title>{{ heading }}</title>`.\n\n```js\n{\n  slug: '_alerts',\n  heading: 'Alerts',\n  group: 'objects',\n  path: 'public/styleguide/objects/_alerts.html',\n  original: 'assets/sass/partials/objects/_alerts.scss',\n  site: {\n    root: 'styleguide/',\n    groups: {\n      modules: [Object],\n      objects: [Object]\n    },\n    assets: '../../styleguide/assets/'\n  },\n  sections: [\n    {\n      id: 'cr3sor',\n      comment: '<h1>Alerts</h1>\\n<p>Creates an alert box notification using the <code>.alert-</code> prefix. The following options are available:</p>',\n      source: '<pre><code>&lt;div class=&quot;alert-success&quot;&gt;Success&lt;/div&gt;\\n&lt;div class=&quot;alert-warning&quot;&gt;Warning&lt;/div&gt;\\n&lt;div class=&quot;alert-error&quot;&gt;Error&lt;/div&gt;</code></pre>',\n      result: '<div class=\"alert-success\">Success</div> <div class=\"alert-warning\">Warning</div> <div class=\"alert-error\">Error</div>'\n    }\n  ]\n}\n```\n\n# Handlebars\n\n[Handlebars](http://handlebarsjs.com/) is a semantic templating syntax. Put simply, it allows you to output dynamic properties in HTML using `{{  }}` from a variety of data sources such as JSON.\n\nSassdown uses Handlebars to output data from the File Objects it creates. Your `.hbs` file specified in the `template` option may contain code that looks like this for example:\n\n```html\n{{#each sections}}\n    <div class=\"section\">\n        {{#if comment}}\n            <div class=\"comment\">{{{comment}}}</div>\n        {{/if}}\n        {{#if result}}\n            <div class=\"result\">{{{result}}}</div>\n        {{/if}}\n        {{#if source}}\n            <div class=\"source\">{{{source}}}</div>\n        {{/if}}\n    </div>\n{{/each}}\n```\n\n## Compass? Sass?\nSassdown **does not** compile your .sass or .scss files. Since you're using Grunt, I would recommend the [grunt-contrib-compass](https://github.com/gruntjs/grunt-contrib-compass) plugin for this task.\n",
  "readmeFilename": "README.md",
  "_id": "sassdown@0.1.4",
  "dist": {
    "shasum": "2e5f9f68b2785e310822fdf23bda9337cd07efc4"
  },
  "_from": "sassdown@",
  "_resolved": "https://registry.npmjs.org/sassdown/-/sassdown-0.1.4.tgz"
}
